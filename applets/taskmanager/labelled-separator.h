/* labelled-separator.h generated by valac 0.10.4, the Vala compiler, do not modify */


#ifndef __LABELLED_SEPARATOR_H__
#define __LABELLED_SEPARATOR_H__

#include <glib.h>
#include <gtk/gtk.h>
#include <stdlib.h>
#include <string.h>

G_BEGIN_DECLS


#define TASK_MANAGER_TYPE_LABELLED_SEPARATOR (task_manager_labelled_separator_get_type ())
#define TASK_MANAGER_LABELLED_SEPARATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TASK_MANAGER_TYPE_LABELLED_SEPARATOR, TaskManagerLabelledSeparator))
#define TASK_MANAGER_LABELLED_SEPARATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TASK_MANAGER_TYPE_LABELLED_SEPARATOR, TaskManagerLabelledSeparatorClass))
#define TASK_MANAGER_IS_LABELLED_SEPARATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TASK_MANAGER_TYPE_LABELLED_SEPARATOR))
#define TASK_MANAGER_IS_LABELLED_SEPARATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TASK_MANAGER_TYPE_LABELLED_SEPARATOR))
#define TASK_MANAGER_LABELLED_SEPARATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TASK_MANAGER_TYPE_LABELLED_SEPARATOR, TaskManagerLabelledSeparatorClass))

typedef struct _TaskManagerLabelledSeparator TaskManagerLabelledSeparator;
typedef struct _TaskManagerLabelledSeparatorClass TaskManagerLabelledSeparatorClass;
typedef struct _TaskManagerLabelledSeparatorPrivate TaskManagerLabelledSeparatorPrivate;

struct _TaskManagerLabelledSeparator {
	GtkSeparatorMenuItem parent_instance;
	TaskManagerLabelledSeparatorPrivate * priv;
};

struct _TaskManagerLabelledSeparatorClass {
	GtkSeparatorMenuItemClass parent_class;
};


GType task_manager_labelled_separator_get_type (void) G_GNUC_CONST;
TaskManagerLabelledSeparator* task_manager_labelled_separator_new (const char* text);
TaskManagerLabelledSeparator* task_manager_labelled_separator_construct (GType object_type, const char* text);


G_END_DECLS

#endif
