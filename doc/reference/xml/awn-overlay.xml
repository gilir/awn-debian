<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libawn-awn-overlay">
<refmeta>
<refentrytitle role="top_of_page" id="libawn-awn-overlay.top_of_page">awn-overlay</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBAWN Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>awn-overlay</refname>
<refpurpose>Base object for overlays used with <link linkend="AwnOverlayable"><type>AwnOverlayable</type></link>.</refpurpose>
</refnamediv>
<refsect1 id="libawn-awn-overlay.stability-level">
<title>Stability Level</title>
Unstable, unless otherwise indicated
</refsect1>

<refsynopsisdiv id="libawn-awn-overlay.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>
<anchor id="AwnOverlay"/>
<synopsis>

#include &lt;libawn/libawn.h&gt;

                    <link linkend="AwnOverlay-struct">AwnOverlay</link>;
<link linkend="void">void</link>                <link linkend="render">render</link>                              (<link linkend="AwnOverlay">AwnOverlay</link> *overlay,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
enum                <link linkend="AwnOverlayAlign">AwnOverlayAlign</link>;
<link linkend="AwnOverlay">AwnOverlay</link>*         <link linkend="awn-overlay-new">awn_overlay_new</link>                     (void);
<link linkend="void">void</link>                <link linkend="awn-overlay-render">awn_overlay_render</link>                  (<link linkend="AwnOverlay">AwnOverlay</link> *overlay,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);
<link linkend="void">void</link>                <link linkend="awn-overlay-move-to">awn_overlay_move_to</link>                 (<link linkend="AwnOverlay">AwnOverlay</link> *overlay,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         <link linkend="gint">gint</link> icon_width,
                                                         <link linkend="gint">gint</link> icon_height,
                                                         <link linkend="gint">gint</link> overlay_width,
                                                         <link linkend="gint">gint</link> overlay_height,
                                                         <link linkend="AwnOverlayCoord">AwnOverlayCoord</link> *coord_req);
<link linkend="gboolean">gboolean</link>            <link linkend="awn-overlay-get-apply-effects">awn_overlay_get_apply_effects</link>       (<link linkend="AwnOverlay">AwnOverlay</link> *overlay);
<link linkend="void">void</link>                <link linkend="awn-overlay-set-apply-effects">awn_overlay_set_apply_effects</link>       (<link linkend="AwnOverlay">AwnOverlay</link> *overlay,
                                                         <link linkend="gboolean">gboolean</link> value);
<link linkend="gboolean">gboolean</link>            <link linkend="awn-overlay-get-use-source-op">awn_overlay_get_use_source_op</link>       (<link linkend="AwnOverlay">AwnOverlay</link> *overlay);
<link linkend="void">void</link>                <link linkend="awn-overlay-set-use-source-op">awn_overlay_set_use_source_op</link>       (<link linkend="AwnOverlay">AwnOverlay</link> *overlay,
                                                         <link linkend="gboolean">gboolean</link> value);
</synopsis>
</refsynopsisdiv>

<refsect1 id="libawn-awn-overlay.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----<link linkend="GInitiallyUnowned">GInitiallyUnowned</link>
         +----AwnOverlay
               +----<link linkend="AwnOverlayProgress">AwnOverlayProgress</link>
               +----<link linkend="AwnOverlayPixbuf">AwnOverlayPixbuf</link>
               +----<link linkend="AwnOverlayThemedIcon">AwnOverlayThemedIcon</link>
               +----<link linkend="AwnOverlayText">AwnOverlayText</link>
               +----<link linkend="AwnOverlayThrobber">AwnOverlayThrobber</link>
</synopsis>
</refsect1>





<refsect1 id="libawn-awn-overlay.properties" role="properties">
<title role="properties.title">Properties</title>
<synopsis>
  &quot;<link linkend="AwnOverlay--active">active</link>&quot;                   <link linkend="gboolean">gboolean</link>              : Read / Write / Construct
  &quot;<link linkend="AwnOverlay--align">align</link>&quot;                    <link linkend="gint">gint</link>                  : Read / Write / Construct
  &quot;<link linkend="AwnOverlay--apply-effects">apply-effects</link>&quot;            <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="AwnOverlay--gravity">gravity</link>&quot;                  <link linkend="GdkGravity">GdkGravity</link>            : Read / Write / Construct
  &quot;<link linkend="AwnOverlay--use-source-op">use-source-op</link>&quot;            <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="AwnOverlay--x-adj">x-adj</link>&quot;                    <link linkend="gdouble">gdouble</link>               : Read / Write / Construct
  &quot;<link linkend="AwnOverlay--x-override">x-override</link>&quot;               <link linkend="gdouble">gdouble</link>               : Read / Write / Construct
  &quot;<link linkend="AwnOverlay--y-adj">y-adj</link>&quot;                    <link linkend="gdouble">gdouble</link>               : Read / Write / Construct
  &quot;<link linkend="AwnOverlay--y-override">y-override</link>&quot;               <link linkend="gdouble">gdouble</link>               : Read / Write / Construct
</synopsis>
</refsect1>



<refsect1 id="libawn-awn-overlay.description" role="desc">
<title role="desc.title">Description</title>
<para>
Base object for overlays used with <link linkend="AwnOverlayable"><type>AwnOverlayable</type></link>.  This object is only
useful as a base class from which other classes are derived.</para>
<para>
</para>
</refsect1>

<refsect1 id="libawn-awn-overlay.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="AwnOverlay-struct" role="struct">
<title>AwnOverlay</title>
<indexterm zone="AwnOverlay-struct"><primary sortas="AwnOverlay">AwnOverlay</primary></indexterm><programlisting>typedef struct _AwnOverlay AwnOverlay;</programlisting>
<para>
Base object for overlays used with <link linkend="AwnOverlayable"><type>AwnOverlayable</type></link>.  This object is only
useful as a base class from which other classes are derived.</para>
<para>
</para></refsect2>
<refsect2 id="render" role="function">
<title>render ()</title>
<indexterm zone="render"><primary sortas="render">render</primary></indexterm><programlisting><link linkend="void">void</link>                render                              (<link linkend="AwnOverlay">AwnOverlay</link> *overlay,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>overlay</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cr</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="AwnOverlayAlign" role="enum">
<title>enum AwnOverlayAlign</title>
<indexterm zone="AwnOverlayAlign"><primary sortas="AwnOverlayAlign">AwnOverlayAlign</primary></indexterm><programlisting>typedef enum
{
  AWN_OVERLAY_ALIGN_CENTRE,
  AWN_OVERLAY_ALIGN_LEFT,
  AWN_OVERLAY_ALIGN_RIGHT
}AwnOverlayAlign;
</programlisting>
<para>
An enum for horizontal alignment relative to the <link linkend="GdkGravity"><type>GdkGravity</type></link> specified for
an <link linkend="AwnOverlay"><type>AwnOverlay</type></link>.  Possible values are <link linkend="AWN-OVERLAY-ALIGN-CENTRE--CAPS"><literal>AWN_OVERLAY_ALIGN_CENTRE</literal></link>,
<link linkend="AWN-OVERLAY-ALIGN-LEFT--CAPS"><literal>AWN_OVERLAY_ALIGN_LEFT</literal></link> and <link linkend="AWN-OVERLAY-ALIGN-RIGHT--CAPS"><literal>AWN_OVERLAY_ALIGN_RIGHT</literal></link></para>
<para>
</para><variablelist role="enum">
<varlistentry id="AWN-OVERLAY-ALIGN-CENTRE--CAPS" role="constant">
<term><literal>AWN_OVERLAY_ALIGN_CENTRE</literal></term>
<listitem><simpara> Centre alignment.
</simpara></listitem>
</varlistentry>
<varlistentry id="AWN-OVERLAY-ALIGN-LEFT--CAPS" role="constant">
<term><literal>AWN_OVERLAY_ALIGN_LEFT</literal></term>
<listitem><simpara> Left alignment.
</simpara></listitem>
</varlistentry>
<varlistentry id="AWN-OVERLAY-ALIGN-RIGHT--CAPS" role="constant">
<term><literal>AWN_OVERLAY_ALIGN_RIGHT</literal></term>
<listitem><simpara> Right alignment.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-overlay-new" role="function">
<title>awn_overlay_new ()</title>
<indexterm zone="awn-overlay-new"><primary sortas="awn_overlay_new">awn_overlay_new</primary></indexterm><programlisting><link linkend="AwnOverlay">AwnOverlay</link>*         awn_overlay_new                     (void);</programlisting>
<para>
Creates a new instance of <link linkend="AwnOverlay"><type>AwnOverlay</type></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> an instance of <link linkend="AwnOverlay"><type>AwnOverlay</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-overlay-render" role="function">
<title>awn_overlay_render ()</title>
<indexterm zone="awn-overlay-render"><primary sortas="awn_overlay_render">awn_overlay_render</primary></indexterm><programlisting><link linkend="void">void</link>                awn_overlay_render                  (<link linkend="AwnOverlay">AwnOverlay</link> *overlay,
                                                         <link linkend="GtkWidget">GtkWidget</link> *widget,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         <link linkend="gint">gint</link> width,
                                                         <link linkend="gint">gint</link> height);</programlisting>
<para>
A virtual function invoked by <link linkend="AwnOverlaidIcon"><type>AwnOverlaidIcon</type></link> for each overlay it contains, 
on <link linkend="AwnOverlaidIcon-expose"><type>"expose"</type></link>.  This should be implemented by subclasses of 
<link linkend="AwnOverlay"><type>AwnOverlay</type></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>overlay</parameter>&#160;:</term>
<listitem><simpara> An pointer to an <link linkend="AwnOverlay"><type>AwnOverlay</type></link> (or subclass) object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>widget</parameter>&#160;:</term>
<listitem><simpara> The <link linkend="GtkWidget"><type>GtkWidget</type></link> that is being overlaid.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cr</parameter>&#160;:</term>
<listitem><simpara> Pointer to cairo context ( <link linkend="cairo-t"><type>cairo_t</type></link> ) for the surface being overlaid. 
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>width</parameter>&#160;:</term>
<listitem><simpara> The width of the <link linkend="AwnThemedIcon"><type>AwnThemedIcon</type></link> as <link linkend="gint"><type>gint</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&#160;:</term>
<listitem><simpara> The height of the <link linkend="AwnThemedIcon"><type>AwnThemedIcon</type></link> as <link linkend="gint"><type>gint</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-overlay-move-to" role="function">
<title>awn_overlay_move_to ()</title>
<indexterm zone="awn-overlay-move-to"><primary sortas="awn_overlay_move_to">awn_overlay_move_to</primary></indexterm><programlisting><link linkend="void">void</link>                awn_overlay_move_to                 (<link linkend="AwnOverlay">AwnOverlay</link> *overlay,
                                                         <link linkend="cairo-t">cairo_t</link> *cr,
                                                         <link linkend="gint">gint</link> icon_width,
                                                         <link linkend="gint">gint</link> icon_height,
                                                         <link linkend="gint">gint</link> overlay_width,
                                                         <link linkend="gint">gint</link> overlay_height,
                                                         <link linkend="AwnOverlayCoord">AwnOverlayCoord</link> *coord_req);</programlisting>
<para>
A convenience function for subclasses of <link linkend="AwnOverlay"><type>AwnOverlay</type></link>.  For most cases will
provide correct placement of the overlay within the surface.  Only of 
interest for those implementing <link linkend="AwnOverlay"><type>AwnOverlay</type></link> subclass.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>overlay</parameter>&#160;:</term>
<listitem><simpara> An pointer to an <link linkend="AwnOverlay"><type>AwnOverlay</type></link> (or subclass) object.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>cr</parameter>&#160;:</term>
<listitem><simpara> Pointer to Cairo context ( <link linkend="cairo-t"><type>cairo_t</type></link>) for the surface being overlaid.  Poi
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon_width</parameter>&#160;:</term>
<listitem><simpara> The width of the <link linkend="AwnIcon"><type>AwnIcon</type></link> as <link linkend="gint"><type>gint</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon_height</parameter>&#160;:</term>
<listitem><simpara> The height of the <link linkend="AwnIcon"><type>AwnIcon</type></link> as <link linkend="gint"><type>gint</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>overlay_width</parameter>&#160;:</term>
<listitem><simpara> The width of the <link linkend="AwnOverlay"><type>AwnOverlay</type></link> as <link linkend="gint"><type>gint</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>overlay_height</parameter>&#160;:</term>
<listitem><simpara> The height of the <link linkend="AwnOverlay"><type>AwnOverlay</type></link> as <link linkend="gint"><type>gint</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>coord_req</parameter>&#160;:</term>
<listitem><simpara> Address of a <link linkend="AwnOverlayCoord"><type>AwnOverlayCoord</type></link> structure or NULL.  The x,y coords
will be returned in the structure if one is provided so they can be used
a later time if needed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-overlay-get-apply-effects" role="function">
<title>awn_overlay_get_apply_effects ()</title>
<indexterm zone="awn-overlay-get-apply-effects"><primary sortas="awn_overlay_get_apply_effects">awn_overlay_get_apply_effects</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            awn_overlay_get_apply_effects       (<link linkend="AwnOverlay">AwnOverlay</link> *overlay);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>overlay</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-overlay-set-apply-effects" role="function">
<title>awn_overlay_set_apply_effects ()</title>
<indexterm zone="awn-overlay-set-apply-effects"><primary sortas="awn_overlay_set_apply_effects">awn_overlay_set_apply_effects</primary></indexterm><programlisting><link linkend="void">void</link>                awn_overlay_set_apply_effects       (<link linkend="AwnOverlay">AwnOverlay</link> *overlay,
                                                         <link linkend="gboolean">gboolean</link> value);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>overlay</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-overlay-get-use-source-op" role="function">
<title>awn_overlay_get_use_source_op ()</title>
<indexterm zone="awn-overlay-get-use-source-op"><primary sortas="awn_overlay_get_use_source_op">awn_overlay_get_use_source_op</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            awn_overlay_get_use_source_op       (<link linkend="AwnOverlay">AwnOverlay</link> *overlay);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>overlay</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="awn-overlay-set-use-source-op" role="function">
<title>awn_overlay_set_use_source_op ()</title>
<indexterm zone="awn-overlay-set-use-source-op"><primary sortas="awn_overlay_set_use_source_op">awn_overlay_set_use_source_op</primary></indexterm><programlisting><link linkend="void">void</link>                awn_overlay_set_use_source_op       (<link linkend="AwnOverlay">AwnOverlay</link> *overlay,
                                                         <link linkend="gboolean">gboolean</link> value);</programlisting>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>overlay</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>value</parameter>&#160;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 id="libawn-awn-overlay.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="AwnOverlay--active" role="property"><title>The <literal>&quot;active&quot;</literal> property</title>
<indexterm zone="AwnOverlay--active"><primary sortas="AwnOverlay:active">AwnOverlay:active</primary></indexterm><programlisting>  &quot;active&quot;                   <link linkend="gboolean">gboolean</link>              : Read / Write / Construct</programlisting>
<para>
The active property controls if the render virtual method of
<link linkend="AwnOverlayClass"><type>AwnOverlayClass</type></link> is invoked when <link linkend="awn-overlay-render-overlay"><function>awn_overlay_render_overlay()</function></link> .  If set to
FALSE the overlay is not rendered.  Subclass implementors should monitor this_effect
property for changes if it is appropriate to disengage timers etc when set to
FALSE.</para>
<para>
</para><para>Default value: TRUE</para>
</refsect2>
<refsect2 id="AwnOverlay--align" role="property"><title>The <literal>&quot;align&quot;</literal> property</title>
<indexterm zone="AwnOverlay--align"><primary sortas="AwnOverlay:align">AwnOverlay:align</primary></indexterm><programlisting>  &quot;align&quot;                    <link linkend="gint">gint</link>                  : Read / Write / Construct</programlisting>
<para>
An <link linkend="AwnOverlayAlign"><type>AwnOverlayAlign</type></link> property that controls horizontal alignment of the overlay 
relative to it's position as specified by the gravity property.  Often used 
with <link linkend="AwnOverlayText"><type>AwnOverlayText</type></link> overlays.  Setting to AWN_OVERLAY_ALIGN_RIGHT or 
AWN_OVERLAY_ALIGN_LEFT will allow for a fixed right or left position for the 
overlay.</para>
<para>
</para><para>Allowed values: [0,2]</para>
<para>Default value: 0</para>
</refsect2>
<refsect2 id="AwnOverlay--apply-effects" role="property"><title>The <literal>&quot;apply-effects&quot;</literal> property</title>
<indexterm zone="AwnOverlay--apply-effects"><primary sortas="AwnOverlay:apply-effects">AwnOverlay:apply-effects</primary></indexterm><programlisting>  &quot;apply-effects&quot;            <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>
The apply-effects property controls <link linkend="AwnEffects"><type>AwnEffects</type></link> effects are applied to the
overlay.</para>
<para>
</para><para>Default value: TRUE</para>
</refsect2>
<refsect2 id="AwnOverlay--gravity" role="property"><title>The <literal>&quot;gravity&quot;</literal> property</title>
<indexterm zone="AwnOverlay--gravity"><primary sortas="AwnOverlay:gravity">AwnOverlay:gravity</primary></indexterm><programlisting>  &quot;gravity&quot;                  <link linkend="GdkGravity">GdkGravity</link>            : Read / Write / Construct</programlisting>
<para>
A property that controls placement of the overlay of type <link linkend="GdkGravity"><type>GdkGravity</type></link>.  
GDK_GRAVITY_STATIC is NOT a valid value.</para>
<para>
</para><para>Default value: GDK_GRAVITY_CENTER</para>
</refsect2>
<refsect2 id="AwnOverlay--use-source-op" role="property"><title>The <literal>&quot;use-source-op&quot;</literal> property</title>
<indexterm zone="AwnOverlay--use-source-op"><primary sortas="AwnOverlay:use-source-op">AwnOverlay:use-source-op</primary></indexterm><programlisting>  &quot;use-source-op&quot;            <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>
The use-source-op property controls if this overlay replaces graphics
already painted beneath the overlay. (support for this has to be implemented
by the subclasses)</para>
<para>
</para><para>Default value: FALSE</para>
</refsect2>
<refsect2 id="AwnOverlay--x-adj" role="property"><title>The <literal>&quot;x-adj&quot;</literal> property</title>
<indexterm zone="AwnOverlay--x-adj"><primary sortas="AwnOverlay:x-adj">AwnOverlay:x-adj</primary></indexterm><programlisting>  &quot;x-adj&quot;                    <link linkend="gdouble">gdouble</link>               : Read / Write / Construct</programlisting>
<para>
An property of type <link linkend="gdouble"><type>gdouble</type></link> that allows the adjustment of the horizontal
position of the <link linkend="AwnOverlay"><type>AwnOverlay</type></link>.  Range of -1.0...1.0.  The amount of adjustment is
this x-adj * width of the <link linkend="AwnIcon"><type>AwnIcon</type></link>.  A value of 0.0 indicates that gravity 
and align will solely determine the x position.</para>
<para>
</para><para>Allowed values: [-1,1]</para>
<para>Default value: 0</para>
</refsect2>
<refsect2 id="AwnOverlay--x-override" role="property"><title>The <literal>&quot;x-override&quot;</literal> property</title>
<indexterm zone="AwnOverlay--x-override"><primary sortas="AwnOverlay:x-override">AwnOverlay:x-override</primary></indexterm><programlisting>  &quot;x-override&quot;               <link linkend="gdouble">gdouble</link>               : Read / Write / Construct</programlisting>
<para>
Overrides the x coordinates.  In most cases if you're using this then you 
are probably doing something wrong.</para>
<para>
</para><para>Allowed values: [-10000,1000]</para>
<para>Default value: -10000</para>
</refsect2>
<refsect2 id="AwnOverlay--y-adj" role="property"><title>The <literal>&quot;y-adj&quot;</literal> property</title>
<indexterm zone="AwnOverlay--y-adj"><primary sortas="AwnOverlay:y-adj">AwnOverlay:y-adj</primary></indexterm><programlisting>  &quot;y-adj&quot;                    <link linkend="gdouble">gdouble</link>               : Read / Write / Construct</programlisting>
<para>
An property of type <link linkend="gdouble"><type>gdouble</type></link> that allows the adjustment of the vertical
position of the <link linkend="AwnOverlay"><type>AwnOverlay</type></link>.  Range of -1.0...1.0.  The amount of adjustment is
this y-adj * height of the <link linkend="AwnIcon"><type>AwnIcon</type></link>.  A value of 0.0 indicates that gravity 
and align will solely determine the y position.</para>
<para>
</para><para>Allowed values: [-1,1]</para>
<para>Default value: 0</para>
</refsect2>
<refsect2 id="AwnOverlay--y-override" role="property"><title>The <literal>&quot;y-override&quot;</literal> property</title>
<indexterm zone="AwnOverlay--y-override"><primary sortas="AwnOverlay:y-override">AwnOverlay:y-override</primary></indexterm><programlisting>  &quot;y-override&quot;               <link linkend="gdouble">gdouble</link>               : Read / Write / Construct</programlisting>
<para>
Overrides the y coordinates.  In most cases if you're using this then you 
are probably doing something wrong.</para>
<para>
</para><para>Allowed values: [-10000,1000]</para>
<para>Default value: -10000</para>
</refsect2>

</refsect1>



<refsect1 id="libawn-awn-overlay.see-also">
<title>See Also</title>
#AwnOverlayable, <link linkend="AwnEffects"><type>AwnEffects</type></link>, <link linkend="AwnIcon"><type>AwnIcon</type></link>, <link linkend="AwnOverlayText"><type>AwnOverlayText</type></link>, <link linkend="AwnOverlayThemedIcon"><type>AwnOverlayThemedIcon</type></link>, <link linkend="AwnOverlayThrobber"><type>AwnOverlayThrobber</type></link>
</refsect1>

</refentry>
